[
  [
    "The following are deserialized transactions which are invalid."
  ],
  [
    "They are in the form"
  ],
  [
    "[[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...],"
  ],
  [
    "serializedTransaction, verifyFlags]"
  ],
  [
    "Use BADTX for verifyFlags if it is expected to fail CheckTransaction()"
  ],
  [
    "Objects that are only a single string (like this one) are ignored"
  ],
  [
    "0e1b5688cf179cd9f7cbda1fac0090f6e684bbf8cd946660120197c3f3681809 but with extra junk appended to the end of the scriptPubKey"
  ],
  [
    [
      [
        "6ca7ec7b1847f6bdbd737176050e6a08d66ccd55bb94ad24f4018024107a5827",
        "0x41 0x043b640e983c9690a14c039a2037ecc3467b27a0dcd58f19d76c7bc118d09fec45adc5370a1c5bf8067ca9f5557a4cf885fdb0fe0dcc9c3a7137226106fbc779a5 CHECKSIG VERIFY 1"
      ]
    ],
    "010000000127587a10248001f424ad94bb55cd6cd6086a0e05767173bdbdf647187beca76c4948304502201b822ad10d6adc1a341ae8835be3f70a25201bbff31f59cbb9c5353a5f0eca18022100ea7b2f7074e9aa9cf70aa8d0ffee13e6b45dddabf1ab961bda378bcdb778fa4701ffffffff0100f2052a010000001976a914fc50c5907d86fed474ba5ce8b12a66e0a4c139d888ac00000000",
    "NONE"
  ],
  [
    "This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json"
  ],
  [
    "but with the signature duplicated in the scriptPubKey with a non-standard pushdata prefix"
  ],
  [
    "See FindAndDelete, which will only remove if it uses the same pushdata prefix as is standard"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "DUP HASH160 0x14 0x5b6462475454710f3c22f5fdf0b40704c92f25c3 EQUALVERIFY CHECKSIGVERIFY 1 0x4c 0x47 0x3044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a01"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000006a473044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a012103ba8c8b86dea131c22ab967e6dd99bdae8eff7a1f75a2c35f1f944109e3fe5e22ffffffff010000000000000000015100000000",
    "NONE"
  ],
  [
    "Same as above, but with the sig in the scriptSig also pushed with the same non-standard OP_PUSHDATA"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "DUP HASH160 0x14 0x5b6462475454710f3c22f5fdf0b40704c92f25c3 EQUALVERIFY CHECKSIGVERIFY 1 0x4c 0x47 0x3044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a01"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000006b4c473044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a012103ba8c8b86dea131c22ab967e6dd99bdae8eff7a1f75a2c35f1f944109e3fe5e22ffffffff010000000000000000015100000000",
    "NONE"
  ],
  [
    "This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json"
  ],
  [
    "but with the signature duplicated in the scriptPubKey with a different hashtype suffix"
  ],
  [
    "See FindAndDelete, which will only remove if the signature, including the hash type, matches"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "DUP HASH160 0x14 0x5b6462475454710f3c22f5fdf0b40704c92f25c3 EQUALVERIFY CHECKSIGVERIFY 1 0x47 0x3044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a81"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000006a473044022067288ea50aa799543a536ff9306f8e1cba05b9c6b10951175b924f96732555ed022026d7b5265f38d21541519e4a1e55044d5b9e17e15cdbaf29ae3792e99e883e7a012103ba8c8b86dea131c22ab967e6dd99bdae8eff7a1f75a2c35f1f944109e3fe5e22ffffffff010000000000000000015100000000",
    "NONE"
  ],
  [
    "An invalid P2SH Transaction"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0x7a052c840ba73af26755de42cf01cc9e0a49fef0 EQUAL"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000009085768617420697320ffffffff010000000000000000015100000000",
    "P2SH"
  ],
  [
    "Tests for CheckTransaction()"
  ],
  [
    "No outputs"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0x05ab9e14d983742513f0f451e105ffb4198d1dd4 EQUAL"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000006d483045022100f16703104aab4e4088317c862daec83440242411b039d14280e03dd33b487ab802201318a7be236672c5c56083eb7a5a195bc57a40af7923ff8545016cd3b571e2a601232103c40e5d339df3f30bf753e7e04450ae4ef76c9e45587d1d993bdc4cd06f0651c7acffffffff0000000000",
    "BADTX"
  ],
  [
    "Negative output"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0xae609aca8061d77c5e111f6bb62501a6bbe2bfdb EQUAL"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000006d4830450220063222cbb128731fc09de0d7323746539166544d6c1df84d867ccea84bcc8903022100bf568e8552844de664cd41648a031554327aa8844af34b4f27397c65b92c04de0123210243ec37dee0e2e053a9c976f43147e79bc7d9dc606ea51010af1ac80db6b069e1acffffffff01ffffffffffffffff015100000000",
    "BADTX"
  ],
  [
    "Duplicate inputs"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0x236d0639db62b0773fd8ac34dc85ae19e9aba80a EQUAL"
      ]
    ],
    "010000000200010000000000000000000000000000000000000000000000000000000000006c47304402204bb1197053d0d7799bf1b30cd503c44b58d6240cccbdc85b6fe76d087980208f02204beeed78200178ffc6c74237bb74b3f276bbb4098b5605d814304fe128bf1431012321039e8815e15952a7c3fada1905f8cf55419837133bd7756c0ef14fc8dfe50c0deaacffffffff00010000000000000000000000000000000000000000000000000000000000006c47304402202306489afef52a6f62e90bf750bbcdf40c06f5c6b138286e6b6b86176bb9341802200dba98486ea68380f47ebb19a7df173b99e6bc9c681d6ccf3bde31465d1f16b3012321039e8815e15952a7c3fada1905f8cf55419837133bd7756c0ef14fc8dfe50c0deaacffffffff010000000000000000015100000000",
    "BADTX"
  ],
  [
    "Coinbase of size 1"
  ],
  [
    "Note the input is just required to make the tester happy"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000000",
        "1"
      ]
    ],
    "010000000100000000000000000000000000000000000000000000000000000000000000000151ffffffff010000000000000000015100000000",
    "BADTX"
  ],
  [
    "Coinbase of size 101"
  ],
  [
    "Note the input is just required to make the tester happy"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000000",
        "1"
      ]
    ],
    "01000000010000000000000000000000000000000000000000000000000000000000000000655151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151ffffffff010000000000000000015100000000",
    "BADTX"
  ],
  [
    "Null txin, but without being a coinbase (because there are two inputs)"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000000",
        "1"
      ],
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ]
    ],
    "0100000002000000000000000000000000000000000000000000000000000000000000000000ffffffff000100000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015100000000",
    "BADTX"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ],
      [
        "0000000000000000000000000000000000000000000000000000000000000000",
        "1"
      ]
    ],
    "0100000002000100000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015100000000",
    "BADTX"
  ],
  [
    "Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG"
      ],
      [
        "0000000000000000000000000000000000000000000000000000000000000200",
        "0x21 0x035e7f0d4d0841bcd56c39337ed086b1a633ee770c1ffdd94ac552a95ac2ce0efc CHECKSIG"
      ]
    ],
    "010000000200010000000000000000000000000000000000000000000000000000000000004948304502203a0f5f0e1f2bdbcd04db3061d18f3af70e07f4f467cbc1b8116f267025f5360b022100c792b6e215afc5afc721a351ec413e714305cb749aae3d7fee76621313418df101010000000002000000000000000000000000000000000000000000000000000000000000484730440220201dc2d030e380e8f9cfb41b442d930fa5a685bb2c8db5906671f865507d0670022018d9e7a8d4c8d86a73c2a724ee38ef983ec249827e0e464841735955c707ece98101000000010100000000000000015100000000",
    "NONE"
  ],
  [
    "CHECKMULTISIG with incorrect signature order"
  ],
  [
    "Note the input is just required to make the tester happy"
  ],
  [
    [
      [
        "b3da01dd4aae683c7aee4d5d8b52a540a508e1115f77cd7fa9a291243f501223",
        "HASH160 0x14 0xb1ce99298d5f07364b57b1e5c9cc00be0b04a954 EQUAL"
      ]
    ],
    "01000000012312503f2491a2a97fcd775f11e108a540a5528b5d4dee7a3c68ae4add01dab3fdfe000048304502207aacee820e08b0b174e248abd8d7a34ed63b5da3abedb99934df9fddd65c05c4022100dfe87896ab5ee3df476c2655f9fbe5bd089dccbef3e4ea05b5d121169fe7f5f401483045022100f6649b0eddfdfd4ad55426663385090d51ee86c3481bdc6b0c18ea6c0ece2c0b0220561c315b07cffa6f7dd9df96dbae9200c2dee09bf93cc35ca05e6cdf613340aa014c695221031d11db38972b712a9fe1fc023577c7ae3ddb4a3004187d41c45121eecfdbb5b7210207ec36911b6ad2382860d32989c7b8728e9489d7bbc94a6b5509ef0029be128821024ea9fac06f666a4adc3fc1357b7bec1fd0bdece2b9d08579226a8ebde53058e453aeffffffff0180380100000000001976a914c9b99cddf847d10685a4fabaa0baf505f7c3dfab88ac00000000",
    "P2SH"
  ],
  [
    "The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63"
  ],
  [
    "It is an OP_CHECKMULTISIG with the dummy value missing"
  ],
  [
    [
      [
        "60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1",
        "1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG"
      ]
    ],
    "0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba2604847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000",
    "NONE"
  ],
  [
    "CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests:"
  ],
  [
    "As above, but with the dummy byte missing"
  ],
  [
    [
      [
        "60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1",
        "1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG"
      ]
    ],
    "0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba2604847304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000",
    "NONE"
  ],
  [
    "Empty stack when we try to run CHECKSIG"
  ],
  [
    [
      [
        "ad503f72c18df5801ee64d76090afe4c607fb2b822e9b7b63c5826c50e22fc3b",
        "0x21 0x027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5 CHECKSIG NOT"
      ]
    ],
    "01000000013bfc220ec526583cb6b7e922b8b27f604cfe0a09764de61e80f58dc1723f50ad00ffffffff0101000000000000002321027c3a97665bf283a102a587a62a30a0c102d4d3b141015e2cae6f64e2543113e5ac00000000",
    "NONE"
  ],
  [
    "Inverted versions of tx_valid CODESEPARATOR IF block tests"
  ],
  [
    "CODESEPARATOR in an unexecuted IF block does not change what is hashed"
  ],
  [
    [
      [
        "a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944",
        "IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1"
      ]
    ],
    "010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a94a48304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd0151ffffffff010000000000000000016a00000000",
    "NONE"
  ],
  [
    "As above, with the IF block executed"
  ],
  [
    [
      [
        "a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944",
        "IF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1"
      ]
    ],
    "010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a94a483045022100fa4a74ba9fd59c59f46c3960cf90cbe0d2b743c471d24a3d5d6db6002af5eebb02204d70ec490fd0f7055a7c45f86514336e3a7f03503dacecabb247fc23f15c83510100ffffffff010000000000000000016a00000000",
    "NONE"
  ],
  [
    "CHECKLOCKTIMEVERIFY tests"
  ],
  [
    "By-height locks, with argument just beyond tx nLockTime"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "499999999 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000fe64cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "500000001 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4294967295 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000feffffff",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Argument missing"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "CHECKLOCKTIMEVERIFY 1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000001b1010000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Argument negative with by-blockheight nLockTime=0"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "-1 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Argument negative with by-blocktime nLockTime=500,000,000"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "-1 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000004005194b1010000000100000000000000000002000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Input locked"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0 CHECKLOCKTIMEVERIFY 1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000ffffffff0100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000251b1ffffffff0100000000000000000002000000",
    "NONE"
  ],
  [
    "Another input being unlocked isn't sufficient; the CHECKLOCKTIMEVERIFY-using input must be unlocked"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0 CHECKLOCKTIMEVERIFY 1"
      ],
      [
        "0000000000000000000000000000000000000000000000000000000000000200",
        "1"
      ]
    ],
    "0100000002000100000000000000000000000000000000000000000000000000000000000000ffffffff000200000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Argument/tx height/time mismatch, both versions"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0 CHECKLOCKTIMEVERIFY 1"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000251b100000000010000000000000000000065cd1d",
    "NONE"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "499999999 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000065cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "500000000 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "500000000 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ff64cd1d",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Argument 2^32 with nLockTime=2^32-1"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x050000000001 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ffffffff",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Same, but with nLockTime=2^31-1"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "2147483648 CHECKLOCKTIMEVERIFY"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000ffffff7f",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "6 byte non-minimally-encoded arguments are invalid even if their contents are valid"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x06 0x000000000000 CHECKLOCKTIMEVERIFY 1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Failure due to failing CHECKLOCKTIMEVERIFY in scriptSig"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000251b1000000000100000000000000000000000000",
    "CHECKLOCKTIMEVERIFY"
  ],
  [
    "Failure due to failing CHECKLOCKTIMEVERIFY in redeemScript"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0xc5b93064159b3b2d6ab506a41b1f50463771b988 EQUAL"
      ]
    ],
    "01000000010001000000000000000000000000000000000000000000000000000000000000030251b1000000000100000000000000000000000000",
    "P2SH,CHECKLOCKTIMEVERIFY"
  ],
  [
    "CHECKSEQUENCEVERIFY tests"
  ],
  [
    "By-height locks, with argument just beyond txin.nSequence"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4259839 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000feff40000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "By-time locks, with argument just beyond txin.nSequence (but within numerical boundaries)"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4194305 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4259839 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000feff40000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Argument missing"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "CHECKSEQUENCEVERIFY 1"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Argument negative with by-blockheight txin.nSequence=0"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "-1 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Argument negative with by-blocktime txin.nSequence=CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "-1 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Argument/tx height/time mismatch, both versions"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0 CHECKSEQUENCEVERIFY 1"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "65535 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4194304 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4259839 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "6 byte non-minimally-encoded arguments are invalid even if their contents are valid"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x06 0x000000000000 CHECKSEQUENCEVERIFY 1"
      ]
    ],
    "0200000001000100000000000000000000000000000000000000000000000000000000000000ffff00000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Failure due to failing CHECKSEQUENCEVERIFY in scriptSig"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "1"
      ]
    ],
    "020000000100010000000000000000000000000000000000000000000000000000000000000251b2000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Failure due to failing CHECKSEQUENCEVERIFY in redeemScript"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "HASH160 0x14 0x7c17aff532f22beb54069942f9bf567a66133eaf EQUAL"
      ]
    ],
    "02000000010001000000000000000000000000000000000000000000000000000000000000030251b2000000000100000000000000000000000000",
    "P2SH,CHECKSEQUENCEVERIFY"
  ],
  [
    "Failure due to insufficient tx.nVersion (<2)"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0 CHECKSEQUENCEVERIFY 1"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "4194304 CHECKSEQUENCEVERIFY"
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000000040000100000000000000000000000000",
    "CHECKSEQUENCEVERIFY"
  ],
  [
    "Witness with unknown version which push false on the stack should be invalid (even without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x60 0x02 0x0000",
        2000
      ]
    ],
    "01000000000101000100000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015101010100000000",
    "NONE"
  ],
  [
    "Witness program should leave clean stack"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x00 0x20 0x2f04a3aa051f1f60d695f6c44c0c3d383973dfd446ace8962664a76bb10e31a8",
        2000
      ]
    ],
    "01000000000101000100000000000000000000000000000000000000000000000000000000000000ffffffff01000000000000000001510102515100000000",
    "P2SH,WITNESS"
  ],
  [
    "Witness v0 with a push of 2 bytes"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x00 0x02 0x0001",
        2000
      ]
    ],
    "01000000000101000100000000000000000000000000000000000000000000000000000000000000ffffffff010000000000000000015101040002000100000000",
    "P2SH,WITNESS"
  ],
  [
    "Unknown witness version with non empty scriptSig"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x60 0x02 0x0001",
        2000
      ]
    ],
    "010000000100010000000000000000000000000000000000000000000000000000000000000151ffffffff010000000000000000015100000000",
    "P2SH,WITNESS"
  ],
  [
    "P2WSH with a redeem representing a witness scriptPubKey should fail due to too many stack items"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x00 0x20 0x34b6c399093e06cf9f0f7f660a1abcfe78fcf7b576f43993208edd9518a0ae9b",
        1000
      ]
    ],
    "01000000000101000100000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015101045102010100000000",
    "P2SH,WITNESS"
  ],
  [
    "P2WSH with an empty redeem should fail due to empty stack"
  ],
  [
    [
      [
        "3d4da21b04a67a54c8a58df1c53a0534b0a7f0864fb3d19abd43b8f6934e785f",
        "0x00 0x20 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
        1337
      ]
    ],
    "020000000001015f784e93f6b843bd9ad1b34f86f0a7b034053ac5f18da5c8547aa6041ba24d3d00ffffffff013905000000000000220020e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855010000000000",
    "P2SH,WITNESS"
  ],
  [
    "33 bytes push should be considered a witness scriptPubKey"
  ],
  [
    [
      [
        "0000000000000000000000000000000000000000000000000000000000000100",
        "0x60 0x21 0xff25429251b5a84f452230a3c75fd886b7fc5a7865ce4a7bb7a9d7c5be6da3dbff",
        1000
      ]
    ],
    "0100000001000100000000000000000000000000000000000000000000000000000000000000ffffffff01e803000000000000015100000000",
    "P2SH,WITNESS,DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM"
  ],
  [
    "FindAndDelete tests"
  ],
  [
    "This is a test of FindAndDelete. The first tx is a spend of normal scriptPubKey and the second tx is a spend of bare P2WSH."
  ],
  [
    "The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>."
  ],
  [
    "The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>,"
  ],
  [
    "where the pubkey is obtained through key recovery with sig and the wrong sighash."
  ],
  [
    "This is to show that FindAndDelete is applied only to non-segwit scripts"
  ],
  [
    "To show that the tests are 'correctly wrong', they should pass by modifying OP_CHECKSIG under interpreter.cpp"
  ],
  [
    "by replacing (sigversion == SigVersion::BASE) with (sigversion != SigVersion::BASE)"
  ],
  [
    "Non-segwit: wrong sighash (without FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08"
  ],
  [
    [
      [
        "f18783ace138abac5d3a7a5cf08e88fe6912f267ef936452e0c27d090621c169",
        "HASH160 0x14 0x0c746489e2d83cdbb5b90b432773342ba809c134 EQUAL",
        200000
      ]
    ],
    "010000000169c12106097dc2e0526493ef67f21269fe888ef05c7a3a5dacab38e1ac8387f1b64830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e012103b12a1ec8428fc74166926318c15e17408fea82dbb157575e16a8c365f546248f4aad4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01ffffffff0101000000000000000000000000",
    "P2SH"
  ],
  [
    "BIP143: wrong sighash (with FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23"
  ],
  [
    [
      [
        "f18783ace138abac5d3a7a5cf08e88fe6912f267ef936452e0c27d090621c169",
        "0x00 0x20 0x9e1be07558ea5cc8e02ed1d80c0911048afad949affa36d5c3951e3159dbea19",
        200000
      ]
    ],
    "0100000000010169c12106097dc2e0526493ef67f21269fe888ef05c7a3a5dacab38e1ac8387f100ffffffff01010000000000000000034830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e012102a9d7ed6e161f0e255c10bbfcca0128a9e2035c2c8da58899c54d22d3a31afdef4aad4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0100000000",
    "P2SH,WITNESS"
  ],
  [
    "This is multisig version of the FindAndDelete tests"
  ],
  [
    "Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP"
  ],
  [
    "52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175"
  ],
  [
    "Signature is 0 <sig1> <sig2> 2 <key1> <key2>"
  ],
  [
    "Should pass by replacing (sigversion == SigVersion::BASE) with (sigversion != SigVersion::BASE) under OP_CHECKMULTISIG"
  ],
  [
    "Non-segwit: wrong sighash (without FindAndDelete) = 4bc6a53e8e16ef508c19e38bba08831daba85228b0211f323d4cb0999cf2a5e8"
  ],
  [
    [
      [
        "9628667ad48219a169b41b020800162287d2c0f713c04157e95c484a8dcb7592",
        "HASH160 0x14 0x5748407f5ca5cdca53ba30b79040260770c9ee1b EQUAL",
        200000
      ]
    ],
    "01000000019275cb8d4a485ce95741c013f7c0d28722160008021bb469a11982d47a662896fd6f01004830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c039596015221023fd5dd42b44769c5653cbc5947ff30ab8871f240ad0c0e7432aefe84b5b4ff3421039d52178dbde360b83f19cf348deb04fa8360e1bf5634577be8e50fafc2b0e4ef4c9552af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175ffffffff0101000000000000000000000000",
    "P2SH"
  ],
  [
    "BIP143: wrong sighash (with FindAndDelete) = 17c50ec2181ecdfdc85ca081174b248199ba81fff730794d4f69b8ec031f2dce"
  ],
  [
    [
      [
        "9628667ad48219a169b41b020800162287d2c0f713c04157e95c484a8dcb7592",
        "0x00 0x20 0x9b66c15b4e0b4eb49fa877982cafded24859fe5b0e2dbfbe4f0df1de7743fd52",
        200000
      ]
    ],
    "010000000001019275cb8d4a485ce95741c013f7c0d28722160008021bb469a11982d47a66289600ffffffff0101000000000000000007004830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c03959601010221023cb6055f4b57a1580c5a753e19610cafaedf7e0ff377731c77837fd666eae1712102c1b1db303ac232ffa8e5e7cc2cf5f96c6e40d3e6914061204c0541cb2043a0969552af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c039596017500000000",
    "P2SH,WITNESS"
  ],
  [
    "SCRIPT_VERIFY_CONST_SCRIPTCODE tests"
  ],
  [
    "Make diffs cleaner by leaving a comment here without comma at the end"
  ]
]